<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
     xmlns:content="http://purl.org/rss/1.0/modules/content/"
     xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
     xmlns:atom="http://www.w3.org/2005/Atom"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:wfw="http://wellformedweb.org/CommentAPI/"
     >
  <channel>
    <title>HackStack Posts</title>
    <link>http://hackstack.org/x/blog</link>
    <description>OpenStack and other hackish things</description>
    <pubDate>Tue, 17 Sep 2013 17:00:03 GMT</pubDate>
    <generator>Blogofile</generator>
    <sy:updatePeriod>hourly</sy:updatePeriod>
    <sy:updateFrequency>1</sy:updateFrequency>
    <item>
      <title>A Fedora 18 Image for OpenStack</title>
      <link>http://hackstack.org/x/blog/2013/01/25/a-fedora-18-image-for-openstack</link>
      <pubDate>Fri, 25 Jan 2013 01:25:00 CST</pubDate>
      <category><![CDATA[openstack]]></category>
      <category><![CDATA[fedora]]></category>
      <guid isPermaLink="false">1jKqR7FTq7lyLCIBc9iAX1D25Bg=</guid>
      <description>A Fedora 18 Image for OpenStack</description>
      <content:encoded><![CDATA[<div class="document">
<p>Building images to boot in a cloud can be a lot of fun, especially since now two clouds are built alike.
Now fortunately the differences are mostly minor, but some of the minor differences can be fatal. Ugh.</p>
<div class="section" id="good-news">
<h1>Good News</h1>
<p>The recent release of Fedora 18 brought with it a pleasant surprise, the build of some images suitable for loading into your favorite cloud, ala Ubuntu's UEC images.
The <a class="reference external" href="http://lists.fedoraproject.org/pipermail/cloud/2013-January/002192.html">mailing list notice</a> gives the background and a reply in that thread mentions some desirable changes.  So in order to make those changes I decided to roll my own using the FCI <a class="reference external" href="/x/files/fedora-18-x86_64-cloud.ks">kickstart</a> as a base.</p>
<p>The <a class="reference external" href="/x/files/fedora-18-x86_64-cloud-dt1.ks">new kickstart</a> file is pretty straightforward and mostly self-explanatory.  Here is what I changed:</p>
<pre class="literal-block">
* Set the timezone to ``Etc/UTC``
* Configure for serial console
* Create a default ``fedora`` user (instead of ``ec2-user``)
* Leave behind a build timestamp in /etc/.build
* Remove sendmail
* Add ??
</pre>
<p>And here is what it took to get <tt class="docutils literal"><span class="pre">appliance-creator</span></tt> running on a fresh Fedora 17 VM:</p>
<pre class="literal-block">
sudo yum install -y appliance-tools.noarch
wget -N http://git.fedorahosted.org/cgit/cloud-kickstarts.git/plain/generic/fedora-18-x86_64-cloud.ks
# make kickstart changes
sudo appliance-creator --config fedora-18-x86_64-cloud-dt1.ks --name fedora18-x86_64-cloud-dt1 --format raw
</pre>
<p>The conversion to qcow2 is done separately as <tt class="docutils literal"><span class="pre">appliance-creator</span></tt> doesn't compress qcow2 images:</p>
<pre class="literal-block">
qemu-img convert -c -f raw -O qcow2 fedora-18-x86_64-cloud-dt1.raw fedora-18-x86_64-cloud-dt1.qcow2
</pre>
<p>Kick it into the cloud image repository:</p>
<pre class="literal-block">
glance image-create --name &quot;Fedora 18 x86_64 cloudimg&quot; --disk-format qcow2 --container-format bare --is-public false --file fedora-18-x86_64-cloud-dt1/fedora-18-x86_64-cloud-dt1-sda.qcow2
</pre>
<div class="section" id="kickstart-details">
<h2>Kickstart Details</h2>
<p>All of the excerpts below are shown in diff(1) format to illustrate the changes made to the original kickstart file.</p>
<div class="section" id="timezone">
<h3>Timezone</h3>
<p>Set the timezone to <tt class="docutils literal">Etc/UTC</tt>:</p>
<pre class="literal-block">
-timezone --utc America/New_York
+timezone --utc Etc/UTC
</pre>
</div>
<div class="section" id="serial-console">
<h3>Serial Console</h3>
<p>There are a couple of things that need to be updated to properly get a serial console in Linux.
Append to the bootloader:</p>
<pre class="literal-block">
-bootloader --timeout=0 --location=mbr --driveorder=sda
+bootloader --timeout=0 --location=mbr --driveorder=sda --append=&quot;console=tty console=ttyS0&quot;
</pre>
<p>Configuring Grub takes a little more effort. The original kickstart only worked in the chroot-ed %post but <tt class="docutils literal"><span class="pre">grub2-mkconfig</span></tt> failed because /dev was not complete.
By adding a <tt class="docutils literal">%post <span class="pre">--nochroot</span></tt> section /dev can be bind-mounted into the chroot so <tt class="docutils literal"><span class="pre">grub2-mkconfig</span></tt> is happy.
I probably went a little overboard in setting up the proper serial console arguments to the kernel command line but the following worked:</p>
<pre class="literal-block">
+%post --nochroot
+echo &quot;Configure GRUB2 for serial console&quot;
+echo GRUB_TIMEOUT=0 &gt; $INSTALL_ROOT/etc/default/grub
+echo GRUB_TERMINAL=console &gt;&gt;$INSTALL_ROOT/etc/default/grub
+echo GRUB_CMDLINE_LINUX=\&quot;console=ttyS0 console=tty\&quot; &gt;&gt;$INSTALL_ROOT/etc/default/grub
+echo GRUB_CMDLINE_LINUX_DEFAULT=\&quot;console=ttyS0\&quot; &gt;&gt;$INSTALL_ROOT/etc/default/grub
+mount -o bind /dev $INSTALL_ROOT/dev
+/usr/sbin/chroot $INSTALL_ROOT /sbin/grub2-mkconfig -o /boot/grub2/grub.cfg
+umount $INSTALL_ROOT/dev
+%end
</pre>
<p>The following lines were also removed from the original <tt class="docutils literal">%post</tt> Grub section:</p>
<pre class="literal-block">
-echo GRUB_TIMEOUT=0 &gt; /etc/default/grub
-sed -i 's/^set timeout=5/set timeout=0/' /boot/grub2/grub.cfg
</pre>
</div>
<div class="section" id="default-account">
<h3>Default Account</h3>
<p><tt class="docutils literal"><span class="pre">cloud-init</span></tt> creates an <tt class="docutils literal"><span class="pre">ec2-user</span></tt> account by default.  The account is useful but this isn't EC2 so the account is renamed to <tt class="docutils literal">fedora</tt>:</p>
<pre class="literal-block">
-# Uncomment this if you want to use cloud init but suppress the creation
-# of an &quot;ec2-user&quot; account. This will, in the absence of further config,
-# cause the ssh key from a metadata source to be put in the root account.
-#cat &lt;&lt;EOF &gt; /etc/cloud/cloud.cfg.d/50_suppress_ec2-user_use_root.cfg
-#users: []
-#disable_root: 0
-#EOF
+# Rename the 'ec2-user' account to 'fedora'
+sed -i '
+  s/name: ec2-user/name: fedora/g
+  s/gecos: EC2/gecos: Fedora/g
+' /etc/cloud/cloud.cfg
</pre>
</div>
<div class="section" id="build-stamp">
<h3>Build Stamp</h3>
<p>Leave a file containing the build version and timestamp just in case it might be useful from inside the VM:</p>
<pre class="literal-block">
+# Leave behind a build stamp
+echo &quot;build=nebula1 $(date +%F.%T)&quot; &gt;/etc/.build
</pre>
</div>
</div>
</div>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>A Fedora 17 Image for OpenStack</title>
      <link>http://hackstack.org/x/blog/2012/11/13/a-fedora-17-image-for-openstack</link>
      <pubDate>Tue, 13 Nov 2012 11:13:00 CST</pubDate>
      <category><![CDATA[openstack]]></category>
      <category><![CDATA[fedora]]></category>
      <guid isPermaLink="false">yvYpRvk7kktXtE6rMWCqHSLLam4=</guid>
      <description>A Fedora 17 Image for OpenStack</description>
      <content:encoded><![CDATA[<div class="document">
<p><em>This worked well enough but has been superceeded by ``appliance-creator``</em></p>
<p>Ubuntu has these nice UEC images that make a great base for cloud appliances.  Fedora has nothing official although there are a couple of older images floating around (links please!).  Nothing for Fedora 17 though.  Let's build one!</p>
<p>The most flexible image builder seems to be oz, as it runs the standard install process and can build nearly anything that boots in KVM.  There are some specific <a class="reference external" href="http://libguestfs.org/guestfs-faq.1.html">requirements for libguestfs</a> and that usually doesn't work properly in a VM.  This all had to be done on bare metal.</p>
<p>Even then, building a Fedora 17 image required Fedora 17. OK, I found an old laptop that could do it and installed f17.</p>
<p>There are also some kickstart files floating around like <a class="reference external" href="https://github.com/rackerjoe/oz-image-build">Racker Joe's repo</a>  and I've stolen from them and from the default kickstart files in Oz.  So here's the <a class="reference external" href="/x/files/fedora17-x86_64.ks">bastard child</a>.</p>
<div class="section" id="oz">
<h1>Oz</h1>
<p>I had to build Oz from source as none of the available packages were current enough:</p>
<pre class="literal-block">
git clone https://github.com/clalancette/oz.git
cd oz
make rpm
sudo yum update ~/rpmbuild/RPMS/noarch/oz-0.10.0-0.20121022223625git17f9c7f.fc17.noarch.rpm
</pre>
<p>Build an image:</p>
<pre class="literal-block">
sudo oz-install -d4 -t6000 -u fedora17-x86_64.tdl -a fedora17-x86_64.ks
qemu-img convert -c -O qcow2 /var/lib/libvirt/images/fedora17-x86_64.dsk fedora17-x86_64.qcow2
</pre>
<p>Upload and boot the image:</p>
<pre class="literal-block">
glance image-create --is-public true --name &quot;Fedora 17 test 2&quot; --disk-format qcow2 --container-format bare --file fedora17-x86_64.qcow2
nova boot --image 94ceb563-41ee-43f6-a999-a3b738c0d299 --flavor 2 --key-name bunsen f17-2
</pre>
<p>This image still has some tweaking needed...</p>
</div>
</div>
]]></content:encoded>
    </item>
  </channel>
</rss>

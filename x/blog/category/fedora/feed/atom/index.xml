<?xml version="1.0" encoding="UTF-8"?>
<feed
  xmlns="http://www.w3.org/2005/Atom"
  xmlns:thr="http://purl.org/syndication/thread/1.0"
  xml:lang="en"
   >
  <title type="text">HackStack Posts</title>
  <subtitle type="text">OpenStack and other hackish things</subtitle>

  <updated>2015-03-30T22:32:10Z</updated>
  <generator uri="http://blogofile.com/">Blogofile</generator>

  <link rel="alternate" type="text/html" href="http://hackstack.org/x/blog" />
  <id>http://hackstack.org/x/blog/feed/atom/</id>
  <link rel="self" type="application/atom+xml" href="http://hackstack.org/x/blog/feed/atom/" />
  <entry>
    <author>
      <name>dtroyer</name>
      <uri>http://hackstack.org/x/blog</uri>
    </author>
    <title type="html"><![CDATA[Cloud Image Updates]]></title>
    <link rel="alternate" type="text/html" href="http://hackstack.org/x/blog/2013/10/21/cloud-image-updates" />
    <id>http://hackstack.org/x/blog/2013/10/21/cloud-image-updates</id>
    <updated>2013-10-21T10:21:00Z</updated>
    <published>2013-10-21T10:21:00Z</published>
    <category scheme="http://hackstack.org/x/blog" term="openstack" />
    <category scheme="http://hackstack.org/x/blog" term="fedora" />
    <category scheme="http://hackstack.org/x/blog" term="ubuntu" />
    <summary type="html"><![CDATA[Cloud Image Updates]]></summary>
    <content type="html" xml:base="http://hackstack.org/x/blog/2013/10/21/cloud-image-updates"><![CDATA[<div class="document">
<p>Update!  Update!  Update!</p>
<p>A while back I started documenting the image build process I've been using for building OpenStack cloud images:</p>
<ul class="simple">
<li><a class="reference external" href="/x/blog/2013/01/25/a-fedora-18-image-for-openstack/">A Fedora 18 Image for OpenStack</a></li>
<li><a class="reference external" href="/x/blog/2013/04/25/a-centos-6-image-for-openstack/">A CentOS 6 Image for OpenStack</a></li>
</ul>
<p>Note that Ubuntu is missing from that list, due mostly to their published UEC images being generally good enough as a starting point.  Fedora 19 finally has a similar image published, let's see how different it is and if it is useful for my purposed...</p>
<p>Also, all of these images have rng-tools added as it is useful on clouds that provide a usable virtualized /dev/random in their hypervisor.</p>
<div class="section" id="fedora-19">
<h1>Fedora 19</h1>
<p>Grab the new F19 cloud image; the QCOW2 version is ready to go!  <a class="reference external" href="http://download.fedoraproject.org/pub/fedora/linux/releases/19/Images/x86_64/Fedora-x86_64-19-20130627-sda.qcow2">http://download.fedoraproject.org/pub/fedora/linux/releases/19/Images/x86_64/Fedora-x86_64-19-20130627-sda.qcow2</a>.</p>
<p>It's surprisingly close!  There aren't any standout differences save for the inclusion of sendmail and procmail, which I've specifically removed in my kickstart.</p>
<ul class="simple">
<li>install rng-tools</li>
<li>remove sendmail and/or procmail if present</li>
<li>clean up OpenSSH host keys</li>
</ul>
</div>
<div class="section" id="centos-6">
<h1>CentOS 6</h1>
<p>This is still a basic installation with a bunch of cruft removes such as all of the firmware packages that are useless in a virtual environment.</p>
<ul class="simple">
<li>stop getty on all vconsoles except /dev/tty1</li>
<li>install rng-tools</li>
<li>install cloud-init</li>
<li>teach device mapper to not auto-generate virtual network devices</li>
<li>add support for growing the root filesystem at first boot</li>
</ul>
</div>
<div class="section" id="ubuntu-12-04">
<h1>Ubuntu 12.04</h1>
<p>Just for completeness I'll list what I do:</p>
<ul class="simple">
<li>install rng-tools</li>
<li>clean up Device Mapper and OpenSSH host keys</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  <entry>
    <author>
      <name>dtroyer</name>
      <uri>http://hackstack.org/x/blog</uri>
    </author>
    <title type="html"><![CDATA[A Fedora 18 Image for OpenStack]]></title>
    <link rel="alternate" type="text/html" href="http://hackstack.org/x/blog/2013/01/25/a-fedora-18-image-for-openstack" />
    <id>http://hackstack.org/x/blog/2013/01/25/a-fedora-18-image-for-openstack</id>
    <updated>2013-01-25T01:25:00Z</updated>
    <published>2013-01-25T01:25:00Z</published>
    <category scheme="http://hackstack.org/x/blog" term="openstack" />
    <category scheme="http://hackstack.org/x/blog" term="fedora" />
    <summary type="html"><![CDATA[A Fedora 18 Image for OpenStack]]></summary>
    <content type="html" xml:base="http://hackstack.org/x/blog/2013/01/25/a-fedora-18-image-for-openstack"><![CDATA[<div class="document">
<p><em>[Updated 01Oct2013 to correct spelling and command formatting]</em></p>
<p>Building images to boot in a cloud can be a lot of fun, especially since no two clouds are built alike.  Now fortunately the differences are mostly minor, but some of the minor differences can be fatal. Ugh.</p>
<div class="section" id="good-news">
<h1>Good News</h1>
<p>The recent release of Fedora 18 brought with it a pleasant surprise, the build of some images suitable for loading into your favorite cloud, ala Ubuntu's UEC images.
The <a class="reference external" href="http://lists.fedoraproject.org/pipermail/cloud/2013-January/002192.html">mailing list notice</a> gives the background and a reply in that thread mentions some desirable changes.  So in order to make those changes I decided to roll my own using the FCI <a class="reference external" href="/x/files/fedora-18-x86_64-cloud.ks">kickstart</a> as a base.</p>
<p>The <a class="reference external" href="/x/files/fedora-18-x86_64-cloud-dt1.ks">new kickstart</a> file is pretty straightforward and mostly self-explanatory.  Here is what I changed:</p>
<pre class="literal-block">
* Set the timezone to ``Etc/UTC``
* Configure for serial console
* Create a default ``fedora`` user (instead of ``ec2-user``)
* Leave behind a build timestamp in /etc/.build
* Remove sendmail
* Add ??
</pre>
<p>And here is what it took to get <tt class="docutils literal"><span class="pre">appliance-creator</span></tt> running on a fresh Fedora 17 VM:</p>
<pre class="literal-block">
sudo yum install -y appliance-tools.noarch
wget -N http://git.fedorahosted.org/cgit/cloud-kickstarts.git/plain/generic/fedora-18-x86_64-cloud.ks
# make kickstart changes
sudo appliance-creator --config fedora-18-x86_64-cloud-dt1.ks \
  --name fedora18-x86_64-cloud-dt1 --format raw
</pre>
<p>The conversion to qcow2 is done separately as <tt class="docutils literal"><span class="pre">appliance-creator</span></tt> doesn't compress qcow2 images:</p>
<pre class="literal-block">
qemu-img convert -c -f raw -O qcow2 \
  fedora-18-x86_64-cloud-dt1.raw \
  fedora-18-x86_64-cloud-dt1.qcow2
</pre>
<p>Kick it into the cloud image repository:</p>
<pre class="literal-block">
glance image-create --name &quot;Fedora 18 x86_64 cloudimg&quot; \
  --disk-format qcow2 --container-format bare \
  --is-public false --file fedora-18-x86_64-cloud-dt1-sda.qcow2
</pre>
<div class="section" id="kickstart-details">
<h2>Kickstart Details</h2>
<p>All of the excerpts below are shown in diff(1) format to illustrate the changes made to the original kickstart file.</p>
<div class="section" id="timezone">
<h3>Timezone</h3>
<p>Set the timezone to <tt class="docutils literal">Etc/UTC</tt>:</p>
<pre class="literal-block">
-timezone --utc America/New_York
+timezone --utc Etc/UTC
</pre>
</div>
<div class="section" id="serial-console">
<h3>Serial Console</h3>
<p>There are a couple of things that need to be updated to properly get a serial console in Linux.
Append to the bootloader:</p>
<pre class="literal-block">
-bootloader --timeout=0 --location=mbr --driveorder=sda
+bootloader --timeout=0 --location=mbr --driveorder=sda --append=&quot;console=tty console=ttyS0&quot;
</pre>
<p>Configuring Grub takes a little more effort. The original kickstart only worked in the chroot-ed <tt class="docutils literal">%post</tt> but <tt class="docutils literal"><span class="pre">grub2-mkconfig</span></tt> failed because /dev was not complete.
By adding a <tt class="docutils literal">%post <span class="pre">--nochroot</span></tt> section /dev can be bind-mounted into the chroot so <tt class="docutils literal"><span class="pre">grub2-mkconfig</span></tt> is happy.
I probably went a little overboard in setting up the proper serial console arguments to the kernel command line but the following worked:</p>
<pre class="literal-block">
+%post --nochroot
+echo &quot;Configure GRUB2 for serial console&quot;
+echo GRUB_TIMEOUT=0 &gt; $INSTALL_ROOT/etc/default/grub
+echo GRUB_TERMINAL=console &gt;&gt;$INSTALL_ROOT/etc/default/grub
+echo GRUB_CMDLINE_LINUX=\&quot;console=ttyS0 console=tty\&quot; &gt;&gt;$INSTALL_ROOT/etc/default/grub
+echo GRUB_CMDLINE_LINUX_DEFAULT=\&quot;console=ttyS0\&quot; &gt;&gt;$INSTALL_ROOT/etc/default/grub
+mount -o bind /dev $INSTALL_ROOT/dev
+/usr/sbin/chroot $INSTALL_ROOT /sbin/grub2-mkconfig -o /boot/grub2/grub.cfg
+umount $INSTALL_ROOT/dev
+%end
</pre>
<p>The following lines were also removed from the original <tt class="docutils literal">%post</tt> Grub section:</p>
<pre class="literal-block">
-echo GRUB_TIMEOUT=0 &gt; /etc/default/grub
-sed -i 's/^set timeout=5/set timeout=0/' /boot/grub2/grub.cfg
</pre>
</div>
<div class="section" id="default-account">
<h3>Default Account</h3>
<p><tt class="docutils literal"><span class="pre">cloud-init</span></tt> creates an <tt class="docutils literal"><span class="pre">ec2-user</span></tt> account by default.  The account is useful but this isn't EC2 so the account is renamed to <tt class="docutils literal">fedora</tt>:</p>
<pre class="literal-block">
-# Uncomment this if you want to use cloud init but suppress the creation
-# of an &quot;ec2-user&quot; account. This will, in the absence of further config,
-# cause the ssh key from a metadata source to be put in the root account.
-#cat &lt;&lt;EOF &gt; /etc/cloud/cloud.cfg.d/50_suppress_ec2-user_use_root.cfg
-#users: []
-#disable_root: 0
-#EOF
+# Rename the 'ec2-user' account to 'fedora'
+sed -i '
+  s/name: ec2-user/name: fedora/g
+  s/gecos: EC2/gecos: Fedora/g
+' /etc/cloud/cloud.cfg
</pre>
</div>
<div class="section" id="build-stamp">
<h3>Build Stamp</h3>
<p>Leave a file containing the build version and timestamp just in case it might be useful from inside the VM:</p>
<pre class="literal-block">
+# Leave behind a build stamp
+echo &quot;build=nebula1 $(date +%F.%T)&quot; &gt;/etc/.build
</pre>
</div>
</div>
</div>
</div>
]]></content>
  </entry>
  <entry>
    <author>
      <name>dtroyer</name>
      <uri>http://hackstack.org/x/blog</uri>
    </author>
    <title type="html"><![CDATA[A Fedora 17 Image for OpenStack]]></title>
    <link rel="alternate" type="text/html" href="http://hackstack.org/x/blog/2012/11/13/a-fedora-17-image-for-openstack" />
    <id>http://hackstack.org/x/blog/2012/11/13/a-fedora-17-image-for-openstack</id>
    <updated>2012-11-13T11:13:00Z</updated>
    <published>2012-11-13T11:13:00Z</published>
    <category scheme="http://hackstack.org/x/blog" term="openstack" />
    <category scheme="http://hackstack.org/x/blog" term="fedora" />
    <summary type="html"><![CDATA[A Fedora 17 Image for OpenStack]]></summary>
    <content type="html" xml:base="http://hackstack.org/x/blog/2012/11/13/a-fedora-17-image-for-openstack"><![CDATA[<div class="document">
<p><em>This worked well enough but has been superceeded by ``appliance-creator``</em></p>
<p>Ubuntu has these nice UEC images that make a great base for cloud appliances.  Fedora has nothing official although there are a couple of older images floating around (links please!).  Nothing for Fedora 17 though.  Let's build one!</p>
<p>The most flexible image builder seems to be oz, as it runs the standard install process and can build nearly anything that boots in KVM.  There are some specific <a class="reference external" href="http://libguestfs.org/guestfs-faq.1.html">requirements for libguestfs</a> and that usually doesn't work properly in a VM.  This all had to be done on bare metal.</p>
<p>Even then, building a Fedora 17 image required Fedora 17. OK, I found an old laptop that could do it and installed f17.</p>
<p>There are also some kickstart files floating around like <a class="reference external" href="https://github.com/rackerjoe/oz-image-build">Racker Joe's repo</a>  and I've stolen from them and from the default kickstart files in Oz.  So here's the <a class="reference external" href="/x/files/fedora17-x86_64.ks">bastard child</a>.</p>
<div class="section" id="oz">
<h1>Oz</h1>
<p>I had to build Oz from source as none of the available packages were current enough:</p>
<pre class="literal-block">
git clone https://github.com/clalancette/oz.git
cd oz
make rpm
sudo yum update ~/rpmbuild/RPMS/noarch/oz-0.10.0-0.20121022223625git17f9c7f.fc17.noarch.rpm
</pre>
<p>Build an image:</p>
<pre class="literal-block">
sudo oz-install -d4 -t6000 -u fedora17-x86_64.tdl -a fedora17-x86_64.ks
qemu-img convert -c -O qcow2 /var/lib/libvirt/images/fedora17-x86_64.dsk fedora17-x86_64.qcow2
</pre>
<p>Upload and boot the image:</p>
<pre class="literal-block">
glance image-create --is-public true --name &quot;Fedora 17 test 2&quot; --disk-format qcow2 --container-format bare --file fedora17-x86_64.qcow2
nova boot --image 94ceb563-41ee-43f6-a999-a3b738c0d299 --flavor 2 --key-name bunsen f17-2
</pre>
<p>This image still has some tweaking needed...</p>
</div>
</div>
]]></content>
  </entry>
</feed>
